// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using beckend.DALL;

#nullable disable

namespace beckend.DALL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230623022916_newtable_2")]
    partial class newtable_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("beckend.Domain.Models.Exercises.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int[]>("additionalGroupMuscle")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("groupExercises")
                        .HasColumnType("integer");

                    b.Property<int>("groupMuscle")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("shortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ExercisesDb");
                });

            modelBuilder.Entity("beckend.Domain.Models.Exercises.PersonalExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<short>("Approaches")
                        .HasColumnType("smallint");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer");

                    b.Property<short>("Repetitions")
                        .HasColumnType("smallint");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.Property<int?>("WorkoutId")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("shortName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("PersonalExercisesDb");
                });

            modelBuilder.Entity("beckend.Domain.Models.Exercises.SetWorckout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<int>>("WorkoutId")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("setWorckoutsDb");
                });

            modelBuilder.Entity("beckend.Domain.Models.Exercises.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<int>>("ExerciseId")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("MainWork")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("ModifiedTimeWorkout")
                        .HasColumnType("date");

                    b.Property<int?>("SetWorckoutId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("TimeWorkout")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("SetWorckoutId");

                    b.ToTable("workoutsDb");
                });

            modelBuilder.Entity("beckend.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UrlImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UsersContext");
                });

            modelBuilder.Entity("beckend.Domain.Models.Exercises.PersonalExercise", b =>
                {
                    b.HasOne("beckend.Domain.Models.Exercises.Exercise", "exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("beckend.Domain.Models.Exercises.Workout", null)
                        .WithMany("ListPersonalExercise")
                        .HasForeignKey("WorkoutId");

                    b.Navigation("exercise");
                });

            modelBuilder.Entity("beckend.Domain.Models.Exercises.Workout", b =>
                {
                    b.HasOne("beckend.Domain.Models.Exercises.SetWorckout", null)
                        .WithMany("ListWorkout")
                        .HasForeignKey("SetWorckoutId");
                });

            modelBuilder.Entity("beckend.Domain.Models.Exercises.SetWorckout", b =>
                {
                    b.Navigation("ListWorkout");
                });

            modelBuilder.Entity("beckend.Domain.Models.Exercises.Workout", b =>
                {
                    b.Navigation("ListPersonalExercise");
                });
#pragma warning restore 612, 618
        }
    }
}
